<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{156E96A3-4C6B-4F5A-ABA2-D432DA6C215C}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <RootNamespace>gTests</RootNamespace>
    <WindowsTargetPlatformVersion>8.1</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v140</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v140</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v140</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v140</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="Shared">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <LinkIncremental>true</LinkIncremental>
    <PostBuildEventUseInBuild>true</PostBuildEventUseInBuild>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <LinkIncremental>true</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <LinkIncremental>false</LinkIncremental>
    <PostBuildEventUseInBuild>true</PostBuildEventUseInBuild>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <LinkIncremental>false</LinkIncremental>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <WarningLevel>EnableAllWarnings</WarningLevel>
      <Optimization>Disabled</Optimization>
      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <SDLCheck>true</SDLCheck>
      <AdditionalIncludeDirectories>$(VisualStudioDir)\Additional C++ Libraries\boost_1_59_0;$(VisualStudioDir)\Additional C++ Libraries\gtest-1.7.0\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalDependencies>gtestd.lib;gtest_main-mdd.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>$(VisualStudioDir)\Additional C++ Libraries\gtest-1.7.0\msvc\gtest-md\$(Configuration);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
    </Link>
    <PostBuildEvent>
      <Command>"$(TargetPath)"</Command>
      <Message>Write test results into output log</Message>
    </PostBuildEvent>
    <PreLinkEvent>
      <Command>xCopy /Y /S "$(SolutionDir)*.h" "$(USERPROFILE)\OneDrive\Documents\Midi-Parser\$(SolutionName)\"
xCopy /Y /S "$(SolutionDir)*.cpp" "$(USERPROFILE)\OneDrive\Documents\Midi-Parser\$(SolutionName)\"
xCopy /Y /S "$(SolutionDir)*.vcxproj" "$(USERPROFILE)\OneDrive\Documents\Midi-Parser\$(SolutionName)\"
xCopy /Y /S "$(SolutionDir)*.vcxproj.filters" "$(USERPROFILE)\OneDrive\Documents\Midi-Parser\$(SolutionName)\"

xCopy /Y "$(SolutionDir)*.sln" "$(USERPROFILE)\OneDrive\Documents\Midi-Parser\$(SolutionName)\"

xCopy /Y /S "$(SolutionDir)*.cd" "$(USERPROFILE)\OneDrive\Documents\Midi-Parser\$(SolutionName)\"
xCopy /Y "$(SolutionDir)*.png" "$(USERPROFILE)\OneDrive\Documents\Midi-Parser\$(SolutionName)\"

xCopy /Y "$(SolutionDir)*.txt" "$(USERPROFILE)\OneDrive\Documents\Midi-Parser\$(SolutionName)\"</Command>
    </PreLinkEvent>
    <PreLinkEvent>
      <Message>Copy all solution files into a backup folder</Message>
    </PreLinkEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <PreprocessorDefinitions>_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <SDLCheck>true</SDLCheck>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalDependencies>gtestd.lib;gtest_main-mdd.lib;$(SolutionDir)$(Configuration)\PowerShell_CLR.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <PostBuildEvent>
      <Command>"$(TargetPath)"</Command>
      <Message>Write test results into output log</Message>
    </PostBuildEvent>
    <PreLinkEvent>
      <Command>xCopy /Y /S "$(SolutionDir)*.h" "$(USERPROFILE)\OneDrive\Documents\Midi-Parser\$(SolutionName)\"
xCopy /Y /S "$(SolutionDir)*.cpp" "$(USERPROFILE)\OneDrive\Documents\Midi-Parser\$(SolutionName)\"
xCopy /Y /S "$(SolutionDir)*.vcxproj" "$(USERPROFILE)\OneDrive\Documents\Midi-Parser\$(SolutionName)\"
xCopy /Y /S "$(SolutionDir)*.vcxproj.filters" "$(USERPROFILE)\OneDrive\Documents\Midi-Parser\$(SolutionName)\"

xCopy /Y "$(SolutionDir)*.sln" "$(USERPROFILE)\OneDrive\Documents\Midi-Parser\$(SolutionName)\"

xCopy /Y /S "$(SolutionDir)*.cd" "$(USERPROFILE)\OneDrive\Documents\Midi-Parser\$(SolutionName)\"
xCopy /Y "$(SolutionDir)*.png" "$(USERPROFILE)\OneDrive\Documents\Midi-Parser\$(SolutionName)\"

xCopy /Y "$(SolutionDir)*.txt" "$(USERPROFILE)\OneDrive\Documents\Midi-Parser\$(SolutionName)\"</Command>
    </PreLinkEvent>
    <PreLinkEvent>
      <Message>Copy all solution files into a backup folder</Message>
    </PreLinkEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <WarningLevel>EnableAllWarnings</WarningLevel>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <SDLCheck>true</SDLCheck>
      <AdditionalIncludeDirectories>$(VisualStudioDir)\Additional C++ Libraries\boost_1_59_0;$(VisualStudioDir)\Additional C++ Libraries\gtest-1.7.0\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <AdditionalDependencies>gtest.lib;gtest_main-md.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>$(VisualStudioDir)\Additional C++ Libraries\gtest-1.7.0\msvc\gtest-md\$(Configuration);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
    </Link>
    <PostBuildEvent>
      <Command>"$(TargetPath)"</Command>
      <Message>Write test results into output log</Message>
    </PostBuildEvent>
    <PreLinkEvent>
      <Command>xCopy /Y /S "$(SolutionDir)*.h" "$(USERPROFILE)\OneDrive\Documents\Midi-Parser\$(SolutionName)\"
xCopy /Y /S "$(SolutionDir)*.cpp" "$(USERPROFILE)\OneDrive\Documents\Midi-Parser\$(SolutionName)\"
xCopy /Y /S "$(SolutionDir)*.vcxproj" "$(USERPROFILE)\OneDrive\Documents\Midi-Parser\$(SolutionName)\"
xCopy /Y /S "$(SolutionDir)*.vcxproj.filters" "$(USERPROFILE)\OneDrive\Documents\Midi-Parser\$(SolutionName)\"

xCopy /Y "$(SolutionDir)*.sln" "$(USERPROFILE)\OneDrive\Documents\Midi-Parser\$(SolutionName)\"

xCopy /Y /S "$(SolutionDir)*.cd" "$(USERPROFILE)\OneDrive\Documents\Midi-Parser\$(SolutionName)\"
xCopy /Y "$(SolutionDir)*.png" "$(USERPROFILE)\OneDrive\Documents\Midi-Parser\$(SolutionName)\"

xCopy /Y "$(SolutionDir)*.txt" "$(USERPROFILE)\OneDrive\Documents\Midi-Parser\$(SolutionName)\"</Command>
    </PreLinkEvent>
    <PreLinkEvent>
      <Message>Copy all solution files into a backup folder</Message>
    </PreLinkEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <PreprocessorDefinitions>NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <SDLCheck>true</SDLCheck>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <AdditionalDependencies>gtest.lib;gtest_main-md.lib;$(SolutionDir)$(Configuration)\PowerShell_CLR.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <PostBuildEvent>
      <Command>"$(TargetPath)"</Command>
      <Message>Write test results into output log</Message>
    </PostBuildEvent>
    <PreLinkEvent>
      <Command>xCopy /Y /S "$(SolutionDir)*.h" "$(USERPROFILE)\OneDrive\Documents\Midi-Parser\$(SolutionName)\"
xCopy /Y /S "$(SolutionDir)*.cpp" "$(USERPROFILE)\OneDrive\Documents\Midi-Parser\$(SolutionName)\"
xCopy /Y /S "$(SolutionDir)*.vcxproj" "$(USERPROFILE)\OneDrive\Documents\Midi-Parser\$(SolutionName)\"
xCopy /Y /S "$(SolutionDir)*.vcxproj.filters" "$(USERPROFILE)\OneDrive\Documents\Midi-Parser\$(SolutionName)\"

xCopy /Y "$(SolutionDir)*.sln" "$(USERPROFILE)\OneDrive\Documents\Midi-Parser\$(SolutionName)\"

xCopy /Y /S "$(SolutionDir)*.cd" "$(USERPROFILE)\OneDrive\Documents\Midi-Parser\$(SolutionName)\"
xCopy /Y "$(SolutionDir)*.png" "$(USERPROFILE)\OneDrive\Documents\Midi-Parser\$(SolutionName)\"

xCopy /Y "$(SolutionDir)*.txt" "$(USERPROFILE)\OneDrive\Documents\Midi-Parser\$(SolutionName)\"</Command>
    </PreLinkEvent>
    <PreLinkEvent>
      <Message>Copy all solution files into a backup folder</Message>
    </PreLinkEvent>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClInclude Include="Fingering_CostCommon.h" />
    <ClInclude Include="Fingering_CostTable.h" />
    <ClInclude Include="stdafx.h" />
    <ClInclude Include="targetver.h" />
    <ClInclude Include="TrellisGraph_Common.h" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="Fingering_CostCommon.cpp" />
    <ClCompile Include="Fingering_CostTable.cpp" />
    <ClCompile Include="Test_Fingering_BlackWhiteKeys.cpp" />
    <ClCompile Include="Test_Fingering_ChordFingVariations.cpp" />
    <ClCompile Include="Test_Fingering_HorizontalCost.cpp" />
    <ClCompile Include="stdafx.cpp">
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Create</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Create</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Create</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Create</PrecompiledHeader>
    </ClCompile>
    <ClCompile Include="Test_Fingering_CostRules.cpp" />
    <ClCompile Include="Test_Fingering_DistanceTable.cpp" />
    <ClCompile Include="Test_Fingering_MonoCosts.cpp" />
    <ClCompile Include="Test_Fingering_NodesLinker.cpp" />
    <ClCompile Include="Test_Fingering_PolyCosts.cpp" />
    <ClCompile Include="Test_Fingering_TrellisGraph_Facade.cpp" />
    <ClCompile Include="Test_Fingering_VerticalCost.cpp" />
    <ClCompile Include="Test_View_NoteNames.cpp" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\..\Model\Fingering_Lib\Fingering_Lib.vcxproj">
      <Project>{ee8c95d4-1ba5-41e0-9140-75f29d0f6e97}</Project>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>